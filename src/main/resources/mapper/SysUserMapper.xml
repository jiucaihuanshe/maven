<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mybatis中的映射文件，对于这个映射文件必须有一个mapper根元素，这个根元素
中必须定义一个命名空间 -->
<mapper namespace="practice.com.project.mybatis.dao.SysUserDao">
	<cache eviction="LRU" flushInterval="60000" size="512" readOnly="true"/>
	<!-- 定义一个SQL查询，必须要有一个id，其中resultType表示查询
	结果会封装到对应的map类型中，一行记录对应一个map -->
	<select id="findUsers" resultType="map">
		select * from sys_users
	</select>
	<select id="findUserById" resultType="map" parameterType="int">
		select * from sys_users where id=#{id}
	</select>
	<insert id="insertObject" parameterType="sysUser">
		insert into sys_users(id,username,password,phone,createdDate,modifiedDate)
		values(null,#{username},#{password},#{phone},now(),now())
	</insert>
	<update id="updateObject" parameterType="sysUser">
		update sys_users set username=#{username},password=#{password},phone=#{phone},
		createdDate=now(),modifiedDate=now() where id=#{id}
	</update>
	<delete id="deleteObject" parameterType="int">
		delete from sys_users where id=#{id}
	</delete>
	<!-- 当查询的结果与要映射的对象字段不匹配时，可以使用ResultMap做映射转换 -->
	<!-- 使用resultMap定义映射关系 -->
	<resultMap type="account" id="amap">
		<result property="uname" column="username"/>
		<result property="pwd" column="password"/>
	</resultMap>
	<!-- 定义一个SQL查询 -->
	<!-- 当数据库返回的字段名与要映射对象属性和set方法不匹配，需要使用resultMap做具体映射 -->
	<select id="findNameAndPwd" resultMap="amap">
		select username,password from sys_users
	</select>
	<!-- useGeneratedKeys="true"使用的前提是数据库必须要支持自增长 -->
	<insert id="insertObject1" parameterType="sysUser"
		useGeneratedKeys="true" keyProperty="id">
       insert into sys_users(id,username,password,phone,createdDate,modifiedDate)
       values(null,#{username},#{password},#{phone},now(),now())
	</insert>
	
	<select id="findUsers1" resultType="map">
		select * from sys_users where phone=#{phone} order by ${columnName} desc
	</select>
	
	<!-- $ 可能导致SQL注入问题 比如：139' or phone like '123
		concat("%",#{phone},"%") 可以解决SQL注入	-->
	<select id="findUsersByPhone" resultType="sysUser">
		<!-- select * from sys_users where phone like '%${phone}%' order by id desc -->
		select * from sys_users where phone like concat("%",#{phone},"%") order by id desc
	</select>
	
	<!-- 动态sql应用
	if语句通常用于进行相关条件判断，返回true则执行，false则不执行。
	where元素用于定义查询条件，并且可以去除空格或者还是and，or等不符合语法要求的字符。
	foreach用于迭代mybatis找那个的多个参数数据。
	 -->
	<select id="findUsersByIf" resultType="sysUser">
		select * from sys_users
		<where>
			<if test="id!=null and id=''">
				id>#{id}
			</if>
		</where>
		<if test="phone!=null and phone!=''">
			and phone like concat("%",#{phone},"%")
		</if>
		<if test="username!=null and username!=''">
			and username like concat("%",#{username},"%")
		</if>
	</select>
	<delete id="deleteForeach">
		delete from sys_users where id in
		<foreach collection="ids" open="(" close=")" separator="," item="item">
			#{item}
		</foreach>
	</delete>
</mapper>
